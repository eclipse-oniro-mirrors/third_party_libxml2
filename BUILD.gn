# Copyright (c) 2021 Huawei Device Co., Ltd.
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
import("//build/config/config.gni")
import("//build/ohos.gni")

# Execute the script and extract libxml2
action("libxml2_install_action") {
  script = "//third_party/libxml2/install.py"
  outputs = [
    "${target_gen_dir}/libxml2-2.9.14/config.h.cmake.in",
    "${target_gen_dir}/libxml2-2.9.14/include/libxml/xmlversion.h.in",
    "${target_gen_dir}/libxml2-2.9.14/DOCBparser.c",
    "${target_gen_dir}/libxml2-2.9.14/HTMLparser.c",
    "${target_gen_dir}/libxml2-2.9.14/HTMLtree.c",
    "${target_gen_dir}/libxml2-2.9.14/SAX.c",
    "${target_gen_dir}/libxml2-2.9.14/SAX2.c",
    "${target_gen_dir}/libxml2-2.9.14/buf.c",
    "${target_gen_dir}/libxml2-2.9.14/c14n.c",
    "${target_gen_dir}/libxml2-2.9.14/catalog.c",
    "${target_gen_dir}/libxml2-2.9.14/chvalid.c",
    "${target_gen_dir}/libxml2-2.9.14/debugXML.c",
    "${target_gen_dir}/libxml2-2.9.14/dict.c",
    "${target_gen_dir}/libxml2-2.9.14/encoding.c",
    "${target_gen_dir}/libxml2-2.9.14/entities.c",
    "${target_gen_dir}/libxml2-2.9.14/error.c",
    "${target_gen_dir}/libxml2-2.9.14/globals.c",
    "${target_gen_dir}/libxml2-2.9.14/hash.c",
    "${target_gen_dir}/libxml2-2.9.14/legacy.c",
    "${target_gen_dir}/libxml2-2.9.14/list.c",
    "${target_gen_dir}/libxml2-2.9.14/nanoftp.c",
    "${target_gen_dir}/libxml2-2.9.14/nanohttp.c",
    "${target_gen_dir}/libxml2-2.9.14/parser.c",
    "${target_gen_dir}/libxml2-2.9.14/parserInternals.c",
    "${target_gen_dir}/libxml2-2.9.14/pattern.c",
    "${target_gen_dir}/libxml2-2.9.14/relaxng.c",
    "${target_gen_dir}/libxml2-2.9.14/schematron.c",
    "${target_gen_dir}/libxml2-2.9.14/threads.c",
    "${target_gen_dir}/libxml2-2.9.14/tree.c",
    "${target_gen_dir}/libxml2-2.9.14/uri.c",
    "${target_gen_dir}/libxml2-2.9.14/valid.c",
    "${target_gen_dir}/libxml2-2.9.14/xinclude.c",
    "${target_gen_dir}/libxml2-2.9.14/xlink.c",
    "${target_gen_dir}/libxml2-2.9.14/xmlIO.c",
    "${target_gen_dir}/libxml2-2.9.14/xmlmemory.c",
    "${target_gen_dir}/libxml2-2.9.14/xmlmodule.c",
    "${target_gen_dir}/libxml2-2.9.14/xmlreader.c",
    "${target_gen_dir}/libxml2-2.9.14/xmlregexp.c",
    "${target_gen_dir}/libxml2-2.9.14/xmlsave.c",
    "${target_gen_dir}/libxml2-2.9.14/xmlschemas.c",
    "${target_gen_dir}/libxml2-2.9.14/xmlschemastypes.c",
    "${target_gen_dir}/libxml2-2.9.14/xmlstring.c",
    "${target_gen_dir}/libxml2-2.9.14/xmlunicode.c",
    "${target_gen_dir}/libxml2-2.9.14/xmlwriter.c",
    "${target_gen_dir}/libxml2-2.9.14/xpath.c",
    "${target_gen_dir}/libxml2-2.9.14/xpointer.c",
    "${target_gen_dir}/libxml2-2.9.14/xzlib.c",
  ]

  inputs = [ "//third_party/libxml2/libxml2-2.9.14.tar.xz" ]
  inputs += [
    "Fix-memleaks-in-xmlXIncludeProcessFlags.patch",
    "backport-parser-Fix-potential-memory-leak-in-xmlParseAttValue.patch",
    "Fix-memory-leaks-for-xmlACatalogAdd.patch",
    "Fix-memory-leaks-in-xmlACatalogAdd-when-xmlHashAddEntry-failed.patch",
    "backport-CVE-2022-40303-Fix-integer-overflows-with-XML_PARSE_.patch",
    "backport-CVE-2022-40304-Fix-dict-corruption-caused-by-entity-.patch",
    "backport-schemas-Fix-null-pointer-deref-in-xmlSchemaCheckCOSS.patch",
    "libxml2-multilib.patch",
    "Fix-CVE-2023-25062.patch",
    "Fix-CVE-2023-45322-pre.patch",
    "Fix-CVE-2023-45322-first.patch",
    "Fix-CVE-2023-45322-second.patch",
    "backport-Add-whitespace-folding-for-some-atomic-data-types-th.patch",
    "backport-Properly-fold-whitespace-around-the-QName-value-when.patch",
    "backport-Avoid-arithmetic-on-freed-pointers.patch",
    "backport-fix-xmlXPathParserContext-could-be-double-delete-in-.patch",
    "backport-Use-UPDATE_COMPAT-consistently-in-buf.c.patch",
    "backport-Restore-behavior-of-htmlDocContentDumpFormatOutput.patch",
    "backport-Fix-use-after-free-bugs-when-calling-xmlTextReaderCl.patch",
    "backport-Use-xmlNewDocText-in-xmlXIncludeCopyRange.patch",
    "backport-xmlBufAvail-should-return-length-without-including-a.patch",
    "backport-Fix-integer-overflow-in-xmlBufferDump.patch",
    "backport-Fix-missing-NUL-terminators-in-xmlBuf-and-xmlBuffer-.patch",
    "backport-Reserve-byte-for-NUL-terminator-and-report-errors-co.patch",
    "backport-Fix-unintended-fall-through-in-xmlNodeAddContentLen.patch",
    "backport-Don-t-reset-nsDef-when-changing-node-content.patch",
    "backport-Avoid-double-free-if-malloc-fails-in-inputPush.patch",
    "backport-Fix-memory-leak-in-xmlLoadEntityContent-error-path.patch",
    "backport-Reset-nsNr-in-xmlCtxtReset.patch",
    "backport-Fix-htmlReadMemory-mixing-up-XML-and-HTML-functions.patch",
    "backport-Don-t-initialize-SAX-handler-in-htmlReadMemory.patch",
    "backport-Fix-HTML-parser-with-threads-and-without-legacy.patch",
    "backport-Fix-xmlCtxtReadDoc-with-encoding.patch",
    "backport-Use-xmlStrlen-in-CtxtReadDoc.patch",
    "backport-Create-stream-with-buffer-in-xmlNewStringInputStream.patch",
    "backport-Use-xmlStrlen-in-xmlNewStringInputStream.patch",
    "backport-Fix-memory-leak-with-invalid-XSD.patch",
    "backport-Make-XPath-depth-check-work-with-recursive-invocatio.patch",
    "backport-Fix-overflow-check-in-SAX2.c.patch",
    "backport-xinclude-Fix-memory-leak-when-fuzzing.patch",
    "backport-xinclude-Fix-more-memory-leaks-in-xmlXIncludeLoadDoc.patch",
    "backport-schemas-Fix-infinite-loop-in-xmlSchemaCheckElemSubst.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlCreatePushParserCt.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlNewPropInternal.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlNewDocNodeEatName.patch",
    "backport-malloc-fail-Fix-infinite-loop-in-xmlSkipBlankChars.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlSAX2ExternalSubset.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlParseReference.patch",
    "backport-malloc-fail-Fix-use-after-free-in-xmlXIncludeAddNode.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlStringGetNodeList.patch",
    "backport-parser-Fix-error-message-in-xmlParseCommentComplex.patch",
    "backport-io-Fix-buffer-full-error-with-certain-buffer-sizes.patch",
    "backport-reader-Switch-to-xmlParserInputBufferCreateMem.patch",
    "backport-uri-Allow-port-without-host.patch",
    "backport-parser-Fix-consumed-accounting-when-switching-encodi.patch",
    "backport-html-Fix-check-for-end-of-comment-in-push-parser.patch",
    "backport-parser-Fix-push-parser-with-1-3-byte-initial-chunk.patch",
    "backport-parser-Restore-parser-state-in-xmlParseCDSect.patch",
    "backport-parser-Remove-dangerous-check-in-xmlParseCharData.patch",
    "backport-parser-Don-t-call-DefaultSAXHandlerInit-from-xmlInit.patch",
    "backport-Correctly-relocate-internal-pointers-after-realloc.patch",
    "backport-Avoid-creating-an-out-of-bounds-pointer-by-rewriting.patch",
    "backport-error-Make-sure-that-error-messages-are-valid-UTF-8.patch",
    "backport-io-Check-for-memory-buffer-early-in-xmlParserInputGrow.patch",
    "backport-io-Remove-xmlInputReadCallbackNop.patch",
    "backport-Revert-uri-Allow-port-without-host.patch",
    "backport-xmlParseStartTag2-contains-typo-when-checking-for-default.patch",
    "backport-parser-Fix-integer-overflow-of-input-ID.patch",
    "backport-parser-Don-t-increase-depth-twice-when-parsing-internal.patch",
    "backport-xpath-number-should-return-NaN.patch",
    "backport-error-Don-t-move-past-current-position.patch",
    "backport-malloc-fail-Handle-memory-errors-in-xmlTextReaderEntPush.patch",
    "backport-malloc-fail-Fix-infinite-loop-in-xmlParseTextDecl.patch",
    "backport-malloc-fail-Fix-null-deref-in-xmlAddDefAttrs.patch",
    "backport-malloc-fail-Fix-null-deref-if-growing-input-buffer-fails.patch",
    "backport-malloc-fail-Fix-null-deref-in-xmlSAX2AttributeInternal.patch",
    "backport-malloc-fail-Fix-null-deref-in-xmlBufResize.patch",
    "backport-buf-Fix-return-value-of-xmlBufGetInputBase.patch",
    "backport-malloc-fail-Don-t-call-xmlErrMemory-in-xmlstring.c.patch",
    "backport-malloc-fail-Fix-reallocation-in-inputPush.patch",
    "backport-malloc-fail-Fix-use-after-free-in-xmlParseStartTag2.patch",
    "backport-malloc-fail-Add-error-checks-in-xmlXPathEqualValuesCommon.patch",
    "backport-malloc-fail-Add-error-check-in-xmlXPathEqualNodeSetFloat.patch",
    "backport-malloc-fail-Fix-error-check-in-xmlXPathCompareValues.patch",
    "backport-malloc-fail-Record-malloc-failure-in-xmlXPathCompLiteral.patch",
    "backport-malloc-fail-Check-return-value-of-xmlXPathNodeSetDupNs.patch",
    "backport-malloc-fail-Fix-null-deref-in-xmlXIncludeLoadTxt.patch",
    "backport-malloc-fail-Fix-reallocation-in-xmlXIncludeNewRef.patch",
    "backport-xinclude-Fix-quadratic-behavior-in-xmlXIncludeLoadTx.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlParserInputBufferCreateMem.patch",
    "backport-malloc-fail-Check-for-malloc-failure-in-xmlFindCharEncodingHandler.patch",
    "backport-malloc-fail-Fix-leak-of-xmlCharEncodingHandler.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlParseEntityDecl.patch",
    "backport-encoding-Cast-toupper-argument-to-unsigned-char.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlXPathCompareValues.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlXPathTryStreamCompile.patch",
    "backport-malloc-fail-Fix-memory-leak-after-calling-valuePush.patch",
    "backport-malloc-fail-Fix-memory-leak-after-calling-xmlXPathWrapNodeSet.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlXIncludeAddNode.patch",
    "backport-malloc-fail-Fix-memory-leak-after-xmlRegNewState.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlSAX2StartElementNs.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlGetDtdElementDesc2.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlDocDumpFormatMemoryEnc.patch",
    "backport-malloc-fail-Fix-infinite-loop-in-htmlParseStartTag1.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlXIncludeLoadTxt.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlCopyPropList.patch",
    "backport-malloc-fail-Fix-memory-leak-after-calling-xmlXPathNodeSetMerge.patch",
    "backport-malloc-fail-Fix-memory-leak-after-calling-xmlXPathWrapString.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlXPathEqualValuesCommon.patch",
    "backport-malloc-fail-Fix-memory-leak-in-htmlCreateMemoryParserCtxt.patch",
    "backport-malloc-fail-Fix-memory-leak-in-htmlCreatePushParserCtxt.patch",
    "backport-malloc-fail-Fix-infinite-loop-in-htmlParseContentInternal.patch",
    "backport-malloc-fail-Fix-infinite-loop-in-htmlParseStartTag2.patch",
    "backport-malloc-fail-Fix-null-deref-in-htmlnamePush.patch",
    "backport-malloc-fail-Fix-infinite-loop-in-htmlParseDocTypeDecl.patch",
    "backport-malloc-fail-Fix-error-code-in-htmlParseChunk.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlFAParseCharProp.patch",
    "backport-malloc-fail-Fix-leak-of-xmlRegAtom.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlRegexpCompile.patch",
    "backport-malloc-fail-Fix-OOB-read-after-xmlRegGetCounter.patch",
    "backport-parser-Fix-OOB-read-when-formatting-error-message.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlXPathEqualNodeSetF.patch",
    "backport-malloc-fail-Fix-use-after-free-related-to-xmlXPathNo.patch",
    "backport-regexp-Add-sanity-check-in-xmlRegCalloc2.patch",
    "backport-malloc-fail-Fix-null-deref-in-xmlXPathCompiledEvalIn.patch",
    "backport-malloc-fail-Fix-null-deref-after-xmlPointerListAddSi.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlGetNsList.patch",
    "backport-malloc-fail-Check-for-malloc-failure-in-xmlHashAddEn.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlXPathCacheNewNodeS.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlXPathDistinctSorte.patch",
    "backport-xpath-Fix-harmless-integer-overflow-in-xmlXPathTrans.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlXPathNameFunction.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlSchemaItemListAddS.patch",
    "backport-malloc-fail-Fix-null-deref-in-xmlGet-Min-Max-Occurs.patch",
    "backport-malloc-fail-Fix-null-deref-in-xmlSchemaValAtomicType.patch",
    "backport-malloc-fail-Fix-null-deref-in-xmlSchemaInitTypes.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlSchemaParse.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlCopyNamespaceList.patch",
    "backport-malloc-fail-Fix-another-memory-leak-in-xmlSchemaBuck.patch",
    "backport-malloc-fail-Fix-null-deref-in-xmlSchemaParseUnion.patch",
    "backport-malloc-fail-Fix-memory-leak-in-WXS_ADD_-LOCAL-GLOBAL.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlSchemaBucketCreate.patch",
    "backport-malloc-fail-Fix-null-deref-in-xmlSchemaParseWildcard.patch",
    "backport-malloc-fail-Fix-type-confusion-after-xmlSchemaFixupT.patch",
    "backport-malloc-fail-Fix-null-deref-after-xmlSchemaItemList-A.patch",
    "backport-malloc-fail-Fix-null-deref-after-xmlSchemaCompareDat.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlSchemaParseUnion.patch",
    "backport-malloc-fail-Fix-memory-leak-in-xmlXPathRegisterNs.patch",
    "backport-catalog-Fix-memory-leaks.patch",
    "backport-CVE-2023-29469.patch",
    "backport-CVE-2023-28484.patch",
    "backport-valid-Allow-xmlFreeValidCtxt-NULL.patch",
    "backport-parser-Use-size_t-when-subtracting-input-buffer-poin.patch",
    "backport-malloc-fail-Fix-null-deref-in-xmlParserInputShrink.patch",
    "backport-xmllint-Fix-memory-leak-with-pattern-stream.patch",
    "backport-xzlib-Fix-implicit-sign-change-in-xz_open.patch",
    "backport-html-Fix-quadratic-behavior-in-htmlParseTryOrFinish.patch",
    "backport-valid-Make-xmlValidateElement-non-recursive.patch",
    "backport-malloc-fail-Fix-buffer-overread-in-htmlParseScript.patch",
    "backport-malloc-fail-Add-more-error-checks-when-parsing-names.patch",
    "backport-malloc-fail-Add-error-check-in-htmlParseHTMLAttribut.patch",
    "backport-parser-Limit-name-length-in-xmlParseEncName.patch",
    "backport-encoding-Fix-error-code-in-asciiToUTF8.patch",
    "backport-malloc-fail-Fix-buffer-overread-with-HTML-doctype-de.patch",
    "backport-parser-Fix-regression-in-xmlParserNodeInfo-accountin.patch",
    "backport-regexp-Fix-cycle-check-in-xmlFAReduceEpsilonTransiti.patch",
    "backport-regexp-Fix-checks-for-eliminated-transitions.patch",
    "backport-regexp-Fix-determinism-checks.patch",
    "backport-regexp-Fix-mistake-in-previous-commit.patch",
    "backport-regexp-Fix-null-deref-in-xmlFAFinishReduceEpsilonTra.patch",
    "backport-hash-Fix-possible-startup-crash-with-old-libxslt-ver.patch",
    "backport-parser-Fix-old-SAX1-parser-with-custom-callbacks.patch",
    "backport-xmllint-Fix-use-after-free-with-maxmem.patch",
    "backport-malloc-fail-Check-for-malloc-failures-when-creating.patch",
    "backport-malloc-fail-Fix-buffer-overread-after-htmlParseScrip.patch",
    "backport-xmlValidatePopElement-can-return-invalid-value-1.patch",
    "backport-Fix-use-after-free-in-xmlParseContentInternal.patch",
    "backport-malloc-fail-Fix-null-deref-after-xmlXIncludeNewRef.patch",
    "backport-xpath-Ignore-entity-ref-nodes-when-computing-node-ha.patch",
    "backport-SAX-Always-initialize-SAX1-element-handlers.patch",
    "Fix-malloc-fail.patch",
    "Fix-CVE-2024-34459.patch",
    "Fix-CVE-2024-56171.patch",
    "Fix-CVE-2025-24928.patch",
    "Fix-CVE-2025-27113.patch",
    "Fix-type-confusion-in-xmlSchemaCheckAGPropsCorrect.patch",
    "Fix-CVE-2019-19956.patch",
    "Fix-CVE-2025-32414.patch",
    "Fix-CVE-2025-32415.patch"
  ]

  args = [
    "--gen-dir",
    rebase_path("${target_gen_dir}", root_build_dir),
    "--source-file",
    rebase_path("//third_party/libxml2"),
  ]
}

# This is the configuration needed to use libxml2.
config("libxml2_config") {
  include_dirs = [
    get_label_info(":libxml2_generate_header", "target_out_dir") + "/include",
    get_label_info(":libxml2_install_action", "target_gen_dir") +
        "/libxml2-2.9.14/include",
  ]
}

# This is the configuration used to build libxml2 itself. It should not be needed outside of this
# library.
#
# This has to be a config instead of flags directly specified on the libxml2 target so the -Wno-*
# flags are ordered after the -Werror flags from the default configs.
config("libxml2_private_config") {
  visibility = [ ":*" ]
  cflags = [
    "-Wno-empty-body",
    "-Wno-incompatible-pointer-types",
    "-Wno-missing-field-initializers",
    "-Wno-self-assign",
    "-Wno-sign-compare",
    "-Wno-tautological-pointer-compare",
    "-Wno-unused-function",
    "-Wno-enum-compare",
    "-Wno-int-conversion",
    "-Wno-uninitialized",
  ]
  defines = [
    "HAVE_CONFIG_H",
    "_REENTRANT",
  ]
  if (is_linux) {
    defines += [ "_GNU_SOURCE" ]
  }
}

# This is the configuration needed to use static libxml2.
config("libxml2_static_config") {
  include_dirs = [
    get_label_info(":libxml2_generate_header", "target_out_dir") + "/include",
    get_label_info(":libxml2_install_action", "target_gen_dir") +
        "/libxml2-2.9.14/include",
  ]
  if (is_mingw) {
    defines = [ "LIBXML_STATIC" ]
  } else {
    defines = [
      "HAVE_CONFIG_H",
      "_REENTRANT",
    ]
  }
}

config("libxml2_static_private_config") {
  cflags = [
    "-Wno-implicit-fallthrough",
    "-Wno-implicit-function-declaration",
    "-Wno-int-conversion",
    "-Wno-uninitialized",
    "-Wno-sometimes-uninitialized",
  ]
  cflags_cc = [ "-std=c++17" ]
}

group("xml2") {
  public_deps = [ ":libxml2" ]
}

ohos_shared_library("libxml2") {
  branch_protector_ret = "pac_ret"
  output_values = get_target_outputs(":libxml2_install_action")
  sources = filter_exclude(output_values,
                           [
                             "*.h.cmake.in",
                             "*.h.in",
                           ])
  public_configs = [ ":libxml2_config" ]
  configs = [ ":libxml2_private_config" ]

  if (is_linux) {
    libs = [ "dl" ]
  }

  if (current_os == "ios") {
    ldflags = [
      "-Wl",
      "-install_name",
      "@rpath/libxml2_shared.framework/libxml2_shared",
    ]
    output_name = "xml2_shared"
  }
  deps = [
    ":libxml2_generate_header",
    ":libxml2_install_action",
  ]
  innerapi_tags = [
    "chipsetsdk",
    "platformsdk",
    "sasdk",
  ]
  install_images = [
    "updater",
    "system",
  ]
  part_name = "libxml2"
  subsystem_name = "thirdparty"
}

if (current_os == "ios") {
  ohos_combine_darwin_framework("libxml2_shared") {
    deps = [ ":libxml2" ]
    subsystem_name = "thirdparty"
    part_name = "libxml2"
  }
}

ohos_static_library("static_libxml2") {
  output_values = get_target_outputs(":libxml2_install_action")
  sources = filter_exclude(output_values,
                           [
                             "*.h.cmake.in",
                             "*.h.in",
                           ])
  public_configs = [ ":libxml2_static_config" ]
  configs = [ ":libxml2_static_private_config" ]

  deps = [
    ":libxml2_generate_header",
    ":libxml2_install_action",
  ]
  part_name = "libxml2"
  subsystem_name = "thirdparty"
}

action("libxml2_generate_header") {
  script = "generate_header.py"

  config_in_path = get_label_info(":libxml2_install_action", "target_gen_dir") +
                   "/libxml2-2.9.14/config.h.cmake.in"
  xmlversion_in_path =
      get_label_info(":libxml2_install_action", "target_gen_dir") +
      "/libxml2-2.9.14/include/libxml/xmlversion.h.in"
  config_json_path = "config_linux.json"
  xml_version_json_path = "xml_version.json"
  if (is_mingw) {
    config_json_path = "config_win.json"
  }

  inputs = [
    config_in_path,
    xmlversion_in_path,
    config_json_path,
    xml_version_json_path,
  ]

  config_path = get_label_info(":libxml2_generate_header", "target_out_dir") +
                "/include/config.h"
  xmlversion_path =
      get_label_info(":libxml2_generate_header", "target_out_dir") +
      "/include/libxml/xmlversion.h"

  outputs = [
    config_path,
    xmlversion_path,
  ]

  args = [
    "--config-input-path",
    rebase_path(config_in_path, root_build_dir),
    "--config-path",
    rebase_path(config_path, root_build_dir),
    "--xmlversion-input-path",
    rebase_path(xmlversion_in_path, root_build_dir),
    "--xmlversion-path",
    rebase_path(xmlversion_path, root_build_dir),
    "--config-json",
    rebase_path(config_json_path, root_build_dir),
    "--xmlversion-json",
    rebase_path(xml_version_json_path, root_build_dir),
  ]

  deps = [ ":libxml2_install_action" ]
}
